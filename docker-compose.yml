services:
  logo-service:
    build:
      context: ./
      dockerfile: Dockerfile   
    restart: 'no'
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 3000:3000
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - '.:/app'
    command: [ 'npm', 'start' ]


  mongo:
    image: mongo:4.4
    restart: 'no'
    environment:
      MONGO_INITDB_ROOT_USERNAME: devel
      MONGO_INITDB_ROOT_PASSWORD: devel
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo -u devel -p devel --quiet
      # test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 3600s
      timeout: 10s
      retries: 60
      start_period: 20s
    ports:
      - 27017
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis_data:/data
    # image: redis:7.0
    # restart: 'no'
    # ports:
    #   - 6379
    # volumes:
    #   - redis_data:/data


  mongo-express:
    image: mongo-express
    restart: 'no'
    ports:
      - 27080:8081
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: devel
      ME_CONFIG_MONGODB_ADMINPASSWORD: devel
      ME_CONFIG_MONGODB_URL: mongodb://devel:devel@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"

volumes:
  mongo_data:
  redis_data:
